#!/usr/bin/env bash

# set -e

cd "`dirname "$0"`/.."
PROJECT_PATH="`pwd`"
source ./../../tools/shared/max_bg_procs

CLI="$PROJECT_PATH/../../cli/dist/grouparoo.js"

# Set needed ENV
export REDIS_URL="redis://mock"
export DATABASE_URL="sqlite://grouparoo_test.sqlite"
export SERVER_TOKEN="ABC123"
export WORKERS=1

printf "*** Starting Tests ***\r\n"

OUTPUT_HELP=`$CLI --help`
printf "help flag"
if [[ "$OUTPUT_HELP" == *"Learn more at https://www.grouparoo.com/docs"* && \
      "$OUTPUT_HELP" != *"Don't see the commands that you are looking for?"* ]]; then
    printf " âœ…\r\n"
else
    printf " ðŸš«\r\n"
    exit 1
fi

cd "../"

OUTPUT_HELP=`$CLI --help`
printf "help flag outside project dir"
if [[ "$OUTPUT_HELP" == *"Learn more at https://www.grouparoo.com/docs"* && \
      "$OUTPUT_HELP" == *"Don't see the commands that you are looking for?"* ]]; then
    printf " âœ…\r\n"
else
    printf " ðŸš«\r\n"
    exit 1
fi

cd $PROJECT_PATH

OUTPUT_VALIDATE=`$CLI validate`
printf "validate"
if [[ "$OUTPUT_VALIDATE" == *"Validation succeeded"*  ]]; then
    printf " âœ…\r\n"
else
    printf " ðŸš«\r\n"
    exit 1
fi

OUTPUT_APPLY=`$CLI apply`
printf "apply"
if [[ "$OUTPUT_APPLY" == *"Config applied"*  ]]; then
    printf " âœ…\r\n"
else
    printf " ðŸš«\r\n"
    exit 1
fi

printf "*** Testing Generators ***\r\n"

TEST_GENERATOR(){
  OUTPUT_GENERATE=`$CLI generate $i $i --parent foo`
  if [[ "$OUTPUT_GENERATE" == *"wrote /"*  ]]; then
      printf " - generate $i âœ…\r\n"
  else
      printf " - generate $i ðŸš«\r\n"
      exit 1
  fi

  # cleanup
  FILENAME=`echo "$OUTPUT_GENERATE" | grep wrote | awk '{print $3}'`
  rm $FILENAME
}

GENERATE_TEMPLATES=`$CLI generate --list | grep "(id" | awk '{print $1}' | perl -pe 's/\e\[[0-9;]*m(?:\e\[K)?//g'` # the perl part is to remove the underline and bold escape chars
for i in $GENERATE_TEMPLATES; do
  MAX_BG_PROCS 5
  TEST_GENERATOR $i & # The "&" backgrounds the function
done

FAIL=0
for PID in `jobs -p`; do
  wait $PID || let "FAIL+=1"
done

if [ "$FAIL" == "0" ]; then
  printf "*** Done! ***\r\n"
else
  printf "*** Test Failed ***\r\n"
  exit 1
fi

