// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test grouparoo records within a mock environment groups match the snapshot 1`] = `
Object {
  "calculatedAt": null,
  "createdAt": Any<Number>,
  "id": StringMatching /\\^grp_/,
  "locked": null,
  "matchType": "all",
  "name": "test group",
  "nextCalculatedAt": Any<Number>,
  "recordsCount": 1,
  "rules": Array [
    Object {
      "key": "email",
      "match": "%@example.com",
      "operation": Object {
        "description": "is like (case sensitive)",
        "op": "like",
      },
      "relativeMatchDirection": null,
      "relativeMatchNumber": null,
      "relativeMatchUnit": null,
      "topLevel": false,
      "type": "email",
    },
  ],
  "state": "ready",
  "type": "calculated",
  "updatedAt": Any<Number>,
}
`;

exports[`test grouparoo records within a mock environment potential exports match the snapshot 1`] = `
Object {
  "completedAt": null,
  "createdAt": null,
  "destination": undefined,
  "destinationName": "test destination",
  "errorLevel": undefined,
  "errorMessage": undefined,
  "exportProcessorId": undefined,
  "force": true,
  "hasChanges": true,
  "id": null,
  "newGroups": Array [
    "remote_group_name",
  ],
  "newRecordProperties": ObjectContaining {
    "email": StringMatching /@example\\.com/,
    "isVIP": true,
    "ltv": 100,
    "primary-id": Any<Number>,
  },
  "oldGroups": Array [
    "remote_group_name",
  ],
  "oldRecordProperties": ObjectContaining {
    "email": StringMatching /@example\\.com/,
    "isVIP": true,
    "ltv": 100,
    "primary-id": Any<Number>,
  },
  "recordId": StringMatching /\\^rec_/,
  "retryCount": 0,
  "sendAt": Any<Number>,
  "startedAt": Any<Number>,
  "state": "pending",
  "toDelete": false,
}
`;

exports[`test grouparoo records within a mock environment record properties match the snapshot 1`] = `
Object {
  "email": Array [
    "example@example.com",
  ],
  "firstName": Array [
    "Mario",
  ],
  "isVIP": Array [
    true,
  ],
  "lastLoginAt": Array [
    1970-01-01T00:00:00.000Z,
  ],
  "lastName": Array [
    "Mario",
  ],
  "ltv": Array [
    100,
  ],
  "purchaseAmounts": Array [
    100,
    200,
  ],
  "purchases": Array [
    "hat",
    "mushroom",
  ],
  "userId": Array [
    100,
  ],
}
`;

exports[`test grouparoo records within a mock environment the record can be snapshot-ed 1`] = `
Object {
  "exports": Array [
    Object {
      "completedAt": null,
      "createdAt": null,
      "destination": undefined,
      "destinationName": "test destination",
      "errorLevel": undefined,
      "errorMessage": undefined,
      "exportProcessorId": undefined,
      "force": true,
      "hasChanges": true,
      "id": null,
      "newGroups": Array [
        "remote_group_name",
      ],
      "newRecordProperties": Object {
        "email": "example@example.com",
        "isVIP": true,
        "ltv": 100,
        "primary-id": 100,
      },
      "oldGroups": Array [
        "remote_group_name",
      ],
      "oldRecordProperties": Object {
        "email": "example@example.com",
        "isVIP": true,
        "ltv": 100,
        "primary-id": 100,
      },
      "recordId": Any<String>,
      "retryCount": 0,
      "sendAt": Any<Number>,
      "startedAt": Any<Number>,
      "state": "pending",
      "toDelete": false,
    },
  ],
  "groups": Array [
    Object {
      "calculatedAt": null,
      "createdAt": Any<Number>,
      "id": Any<String>,
      "locked": null,
      "matchType": "all",
      "name": "test group",
      "nextCalculatedAt": Any<Number>,
      "recordsCount": 1,
      "rules": Array [
        Object {
          "key": "email",
          "match": "%@example.com",
          "operation": Object {
            "description": "is like (case sensitive)",
            "op": "like",
          },
          "relativeMatchDirection": null,
          "relativeMatchNumber": null,
          "relativeMatchUnit": null,
          "topLevel": false,
          "type": "email",
        },
      ],
      "state": "ready",
      "type": "calculated",
      "updatedAt": Any<Number>,
    },
  ],
  "properties": Object {
    "email": Object {
      "configId": Any<String>,
      "confirmedAt": Any<Date>,
      "createdAt": Any<Date>,
      "directlyMapped": false,
      "id": Any<String>,
      "identifying": false,
      "isArray": false,
      "startedAt": null,
      "state": "ready",
      "stateChangedAt": Any<Date>,
      "type": "email",
      "unique": true,
      "updatedAt": Any<Date>,
      "valueChangedAt": Any<Date>,
      "values": Array [
        "example@example.com",
      ],
    },
    "firstName": Object {
      "configId": Any<String>,
      "confirmedAt": Any<Date>,
      "createdAt": Any<Date>,
      "directlyMapped": false,
      "id": Any<String>,
      "identifying": false,
      "isArray": false,
      "startedAt": null,
      "state": "ready",
      "stateChangedAt": Any<Date>,
      "type": "string",
      "unique": false,
      "updatedAt": Any<Date>,
      "valueChangedAt": Any<Date>,
      "values": Array [
        "Mario",
      ],
    },
    "isVIP": Object {
      "configId": Any<String>,
      "confirmedAt": Any<Date>,
      "createdAt": Any<Date>,
      "directlyMapped": false,
      "id": Any<String>,
      "identifying": false,
      "isArray": false,
      "startedAt": null,
      "state": "ready",
      "stateChangedAt": Any<Date>,
      "type": "boolean",
      "unique": false,
      "updatedAt": Any<Date>,
      "valueChangedAt": Any<Date>,
      "values": Array [
        true,
      ],
    },
    "lastLoginAt": Object {
      "configId": Any<String>,
      "confirmedAt": Any<Date>,
      "createdAt": Any<Date>,
      "directlyMapped": false,
      "id": Any<String>,
      "identifying": false,
      "isArray": false,
      "startedAt": null,
      "state": "ready",
      "stateChangedAt": Any<Date>,
      "type": "date",
      "unique": false,
      "updatedAt": Any<Date>,
      "valueChangedAt": Any<Date>,
      "values": Array [
        1970-01-01T00:00:00.000Z,
      ],
    },
    "lastName": Object {
      "configId": Any<String>,
      "confirmedAt": Any<Date>,
      "createdAt": Any<Date>,
      "directlyMapped": false,
      "id": Any<String>,
      "identifying": false,
      "isArray": false,
      "startedAt": null,
      "state": "ready",
      "stateChangedAt": Any<Date>,
      "type": "string",
      "unique": false,
      "updatedAt": Any<Date>,
      "valueChangedAt": Any<Date>,
      "values": Array [
        "Mario",
      ],
    },
    "ltv": Object {
      "configId": Any<String>,
      "confirmedAt": Any<Date>,
      "createdAt": Any<Date>,
      "directlyMapped": false,
      "id": Any<String>,
      "identifying": false,
      "isArray": false,
      "startedAt": null,
      "state": "ready",
      "stateChangedAt": Any<Date>,
      "type": "float",
      "unique": false,
      "updatedAt": Any<Date>,
      "valueChangedAt": Any<Date>,
      "values": Array [
        100,
      ],
    },
    "purchaseAmounts": Object {
      "configId": Any<String>,
      "confirmedAt": Any<Date>,
      "createdAt": Any<Date>,
      "directlyMapped": false,
      "id": Any<String>,
      "identifying": false,
      "isArray": true,
      "startedAt": null,
      "state": "ready",
      "stateChangedAt": Any<Date>,
      "type": "float",
      "unique": false,
      "updatedAt": Any<Date>,
      "valueChangedAt": Any<Date>,
      "values": Array [
        100,
        200,
      ],
    },
    "purchases": Object {
      "configId": Any<String>,
      "confirmedAt": Any<Date>,
      "createdAt": Any<Date>,
      "directlyMapped": false,
      "id": Any<String>,
      "identifying": false,
      "isArray": true,
      "startedAt": null,
      "state": "ready",
      "stateChangedAt": Any<Date>,
      "type": "string",
      "unique": false,
      "updatedAt": Any<Date>,
      "valueChangedAt": Any<Date>,
      "values": Array [
        "hat",
        "mushroom",
      ],
    },
    "userId": Object {
      "configId": Any<String>,
      "confirmedAt": Any<Date>,
      "createdAt": Any<Date>,
      "directlyMapped": true,
      "id": Any<String>,
      "identifying": true,
      "isArray": false,
      "startedAt": null,
      "state": "ready",
      "stateChangedAt": Any<Date>,
      "type": "integer",
      "unique": true,
      "updatedAt": Any<Date>,
      "valueChangedAt": Any<Date>,
      "values": Array [
        100,
      ],
    },
  },
}
`;
