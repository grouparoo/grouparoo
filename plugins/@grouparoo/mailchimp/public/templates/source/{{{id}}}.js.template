exports.default = async function buildConfig() {
  // Option 1: This is the first source and you need to bootstrap the first property as well
  return [
    {
      class: "source",
      id: {{{id}}},
      name: {{{id}}},
      type: "{{{__pluginName}}}-import",
      appId: "mailchimpApp", // The id of the App this Source uses
      options: {
        listId: "abc123" // The Mailchimp List ID
      },

      /*
       * For example, if you want to say your MERGE_VAR "id" maps the Grouparoo Property "userId".
       */
      mapping: {
        "merge_fields.USER_ID": "userId", // Merge vars look like "merge_fields.FNAME" while you can access "email_address" directly.
      },

      // If this is the first source, you will also need to make the first property.  This is a special first-time bootstrapping process/
      bootstrappedProperty: {
        id: "user_id",
        name: "User Id",
        type: "integer",
        options: {
          column: "id",
        },
      },
    },
  ];

  // Option 2: This is not the first source, and you can reference other properties which already exist
  // return [
  //   {
  //     class: "source",
  //     id: {{{id}}},
  //     name: {{{id}}},
  //     type: {{{__pluginName}}}-import,
  //     appId: "mailchimpApp", // The id of the app this source uses
  //     options: {
  //       listId: "abc123" // The Mailchimp List ID
  //     },
  //
  //     /*
  //      * For example, if you want to say your MERGE_VAR "id" maps the Grouparoo Property "userId"
  //      */
  //     mapping: {
  //       "merge_fields.USER_ID": "userId", // Merge vars look like "merge_fields.FNAME" while you can access "email_address" directly.
  //     },
  //   },
  // ];
};
