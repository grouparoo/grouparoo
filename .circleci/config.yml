# THIS FILE IS AUTO-GENERATED. DO NOT CHANGE IT DIRECTLY.
# SEE tools/merger TO MAKE CHANGES.
#
version: 2
#
# Define common steps all parts of the test workflow use
references:
  ignored-branches: &ignored-branches
    branches:
      ignore:
        - gh-pages
  cache-options: &cache-options
    key: package-cache-{{ .Branch }}-{{ .Revision }}
#
# Define Jobs to run
jobs:
  build:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          <<: *cache-options
      - run: sudo apt-get install -y rsync
      - run:
          name: npm-install
          command: npm install
      - save_cache:
          <<: *cache-options
          paths:
            - apps/local-public/node_modules
            - apps/staging-public/node_modules
            - core/node_modules
            - node_modules
            - plugins/@grouparoo/bigquery/node_modules
            - plugins/@grouparoo/csv/node_modules
            - plugins/@grouparoo/email-authentication/node_modules
            - plugins/@grouparoo/files-local/node_modules
            - plugins/@grouparoo/files-s3/node_modules
            - plugins/@grouparoo/google-sheets/node_modules
            - plugins/@grouparoo/logger/node_modules
            - plugins/@grouparoo/mailchimp/node_modules
            - plugins/@grouparoo/mysql/node_modules
            - plugins/@grouparoo/newrelic/node_modules
            - plugins/@grouparoo/postgres/node_modules
            - plugins/@grouparoo/sailthru/node_modules
            - plugins/@grouparoo/sample-ui-plugin/node_modules
            - tools/merger/node_modules
            - plugins/@grouparoo/bigquery/dist
            - plugins/@grouparoo/csv/dist
            - plugins/@grouparoo/email-authentication/dist
            - plugins/@grouparoo/files-local/dist
            - plugins/@grouparoo/files-s3/dist
            - plugins/@grouparoo/google-sheets/dist
            - plugins/@grouparoo/logger/dist
            - plugins/@grouparoo/mailchimp/dist
            - plugins/@grouparoo/mysql/dist
            - plugins/@grouparoo/newrelic/dist
            - plugins/@grouparoo/postgres/dist
            - plugins/@grouparoo/sailthru/dist
            - plugins/@grouparoo/sample-ui-plugin/dist
            - core/api/dist
            - core/web/.next
  license-checker:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          <<: *cache-options
      - run:
          name: license-checker
          command: ./tools/license-checker/check
  linter:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          <<: *cache-options
      - run:
          name: linter
          command: npm run lint
  test-core:
    docker:
      - image: circleci/node:12
      - image: redis:latest
      - image: circleci/postgres:9
        environment:
          POSTGRES_PASSWORD: password
      - image: selenium/standalone-chrome:latest
    steps:
      - checkout
      - restore_cache:
          <<: *cache-options
      - run:
          name: install postgresql client
          command: sudo apt install -y postgresql-client
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: create test databases
          command: cd core/api && ./bin/create_test_databases
      - run:
          name: test-api
          command: cd core/api && ./../node_modules/.bin/jest --ci --maxWorkers 4
      - run:
          name: test-web
          command: cd core/web && ./../node_modules/.bin/jest --ci --runInBand
          environment:
            SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub
  test-plugins:
    docker:
      - image: circleci/node:12
      - image: redis:latest
      - image: circleci/postgres:9
        environment:
          POSTGRES_PASSWORD: password
      - image: circleci/mysql:5
    steps:
      - checkout
      - restore_cache:
          <<: *cache-options
      - run:
          name: install postgresql client
          command: sudo apt install -y postgresql-client
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: create test databases
          command: cd core/api && ./bin/create_test_databases
      - run:
          name: install mysql client
          command: sudo apt install -y mysql-client
      - run:
          name: create mysql databases
          command: mysql -e "create database grouparoo_test" -u root -h 127.0.0.1
      - run:
          name: test
          command: ./node_modules/.bin/lerna exec ./node_modules/.bin/jest --stream --concurrency 1 --ignore "@grouparoo/core" --ignore "*/app-*" -- --ci --passWithNoTests
  complete:
    docker:
      - image: circleci/node:12
    steps:
      - run:
          name: complete
          command: echo "Tests Complete!"
  publish:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          <<: *cache-options
      - add_ssh_keys:
          fingerprints:
            - 49:46:31:67:74:97:c4:66:44:79:89:67:29:41:89:96
      - run: git config --global user.email "hello@grouparoo.com"
      - run: git config --global user.name "Grouparoo Bot"
      - run: npm run prepare
      - run: ./bin/publish
workflows:
  version: 2
  #
  # Run the tests on push
  test-grouparoo-push:
    jobs:
      - build:
          filters:
            <<: *ignored-branches
      - license-checker:
          filters:
            <<: *ignored-branches
          requires:
            - build
      - linter:
          filters:
            <<: *ignored-branches
          requires:
            - build
      - test-core:
          filters:
            <<: *ignored-branches
          requires:
            - build
      - test-plugins:
          filters:
            <<: *ignored-branches
          requires:
            - build
      - complete:
          filters:
            <<: *ignored-branches
          requires:
            - license-checker
            - linter
            - test-core
            - test-plugins
  #
  # Run the tests each week + publish
  test-grouparoo-nightly:
    triggers:
      - schedule:
          cron: "0 0 * * 5"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          filters:
            <<: *ignored-branches
      - license-checker:
          filters:
            <<: *ignored-branches
          requires:
            - build
      - linter:
          filters:
            <<: *ignored-branches
          requires:
            - build
      - test-core:
          filters:
            <<: *ignored-branches
          requires:
            - build
      - test-plugins:
          filters:
            <<: *ignored-branches
          requires:
            - build
      - complete:
          filters:
            <<: *ignored-branches
          requires:
            - license-checker
            - linter
            - test-core
            - test-plugins
      - publish:
          filters:
            branches:
              only:
                - master
                - stable
          requires:
            - complete
